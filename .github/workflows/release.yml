name: Release CI

on:
  release:
    types:
      - edited

env:
  CI: true

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Use Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: nodejs project information
        id: projectinfo
        uses: gregoranders/nodejs-project-info@v0.0.6
      - name: npm install
        run: |
          npm install
      - name: npm run build
        run: |
          npm run build
      - name: create release
        id: createrelease
        uses: gregoranders/nodejs-create-release@v0.0.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGE_JSON: ${{ steps.projectinfo.outputs.context }}
        with:
          tag: v${{ steps.projectinfo.outputs.version }}
          name: ${{ steps.projectinfo.outputs.name }} - ${{ steps.projectinfo.outputs.version }}
          body: ${{ steps.projectinfo.outputs.name }} - ${{ steps.projectinfo.outputs.version }} Release
          target: ${{ github.ref }}
          draft: true
      - name: upload index.js
        id: uploadmain
        uses: gregoranders/nodejs-upload-asset@v0.0.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          id: ${{ steps.createrelease.outputs.id }}
          path: dist/index.js
          name: index.js
      - name: upload index.d.ts
        id: uploadtype
        uses: gregoranders/nodejs-upload-asset@v0.0.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          id: ${{ steps.createrelease.outputs.id }}
          path: dist/index.d.ts
          name: index.d.ts
